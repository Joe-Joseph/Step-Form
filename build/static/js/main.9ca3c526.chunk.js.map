{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Succes.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","Fragment","title","hintText","floatingLabelText","onChange","defaultValue","firstName","lastName","email","label","primary","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupation","city","bio","List","primaryText","secondaryText","UserForm","state","step","setState","input","target","value","Confirm","Succes","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ca3c526.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nexport class FormUserDetails extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n    render() {\n        const { values, handleChange } = this.props;\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\"Enter User Details\"/>\n                    <TextField\n                        hintText=\"Enter Your First Name\"\n                        floatingLabelText=\"First Name\"\n                        onChange={handleChange('firstName')}\n                        defaultValue={values.firstName}\n                    />\n                    <br/>\n                    <TextField\n                        hintText=\"Enter Your Last Name\"\n                        floatingLabelText=\"Last Name\"\n                        onChange={handleChange('lastName')}\n                        defaultValue={values.lastName}\n                    />\n                    <br/>\n                    <TextField\n                        hintText=\"Enter Your Email\"\n                        floatingLabelText=\"Email\"\n                        onChange={handleChange('email')}\n                        defaultValue={values.email}\n                    />\n                    <br/>\n                    <RaisedButton\n                        label=\"Continue\"\n                        primary={true}\n                        style={styles.button }\n                        onClick={this.continue}\n                    />\n                </React.Fragment>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nconst styles = {\n    button: {\n        margin: 15\n    }\n}\n\nexport default FormUserDetails\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nexport class FormPersonalDetails extends Component {\n    continue = e => {\n        e.preventDefault();\n        this.props.nextStep();\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values, handleChange } = this.props;\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\"Enter Personal Details\"/>\n                    <TextField\n                        hintText=\"Enter Your Occupation\"\n                        floatingLabelText=\"Occupation\"\n                        onChange={handleChange('occupation')}\n                        defaultValue={values.occupation}\n                    />\n                    <br/>\n                    <TextField\n                        hintText=\"Enter Your City\"\n                        floatingLabelText=\"City\"\n                        onChange={handleChange('city')}\n                        defaultValue={values.city}\n                    />\n                    <br/>\n                    <TextField\n                        hintText=\"Enter Your Bio\"\n                        floatingLabelText=\"Bio\"\n                        onChange={handleChange('bio')}\n                        defaultValue={values.bio}\n                    />\n                    <br/>\n                    <RaisedButton\n                        label=\"Continue\"\n                        primary={true}\n                        style={styles.button }\n                        onClick={this.continue}\n                    />\n\n                    <RaisedButton\n                        label=\"Back\"\n                        primary={false}\n                        style={styles.button }\n                        onClick={this.back}\n                    />\n                </React.Fragment>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nconst styles = {\n    button: {\n        margin: 15\n    }\n}\n\nexport default FormPersonalDetails;\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport { List, ListItem } from 'material-ui/List';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nexport class FormUserDetails extends Component {\n    continue = e => {\n        e.preventDefault();\n        // Send Data to API\n        this.props.nextStep();\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values: { firstName, lastName, email, occupation, city, bio } } = this.props;\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\"Confirm User Data\"/>\n                    <List>\n                        <ListItem\n                            primaryText=\"First Name\"\n                            secondaryText={ firstName }\n                        />\n\n                        <ListItem\n                            primaryText=\"Last Name\"\n                            secondaryText={ lastName }\n                        />\n\n                        <ListItem\n                            primaryText=\"Email\"\n                            secondaryText={ email }\n                        />\n\n                        <ListItem\n                            primaryText=\"Occupation\"\n                            secondaryText={ occupation }\n                        />\n\n                        <ListItem\n                            primaryText=\"City\"\n                            secondaryText={ city }\n                        />\n\n                        <ListItem\n                            primaryText=\"Bio\"\n                            secondaryText={ bio }\n                        />\n                    </List>\n                    <br/>\n                    <RaisedButton\n                        label=\"Confirm & Continue\"\n                        primary={true}\n                        style={styles.button }\n                        onClick={this.continue}\n                    />\n\n                    <RaisedButton\n                        label=\"Back\"\n                        primary={false}\n                        style={styles.button }\n                        onClick={this.back}\n                    />\n                </React.Fragment>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nconst styles = {\n    button: {\n        margin: 15\n    }\n}\n\nexport default FormUserDetails\n","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\n\nexport class FormUserDetails extends Component {\n    continue = e => {\n        e.preventDefault();\n        // Send Data to API\n        this.props.nextStep();\n    }\n\n    back = e => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { values: { firstName, lastName } } = this.props;\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\"Success\"/>\n                    <h1>{`Thank you ${firstName} for your submission`}</h1>\n                    <p>Your will get an email with further instruction</p>\n                </React.Fragment>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nexport default FormUserDetails\n","import React, { Component } from 'react';\nimport FormUserDetails from './FormUserDetails';\nimport FormPersonalDetails from './FormPersonalDetails';\nimport Confirm from './Confirm';\nimport Success from './Succes';\n\nexport class UserForm extends Component {\n    state = {\n        step: 1,\n        firstName: '',\n        lastName: '',\n        email: '',\n        occupation: '',\n        city: '',\n        bio: ''\n    };\n\n    // Next Step\n    nextStep = () => {\n        const { step } = this.state;\n        this.setState({ step: step + 1 });\n    }\n\n    // Back to previous Step\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({ step: step - 1 });\n    }\n\n    // Handle fields change\n    handleChange = input => e => {\n        this.setState({[input]: e.target.value});\n    }\n    render() {\n        const { step } = this.state;\n        const { firstName, lastName, email, occupation, city, bio } = this.state;\n        const values = { firstName, lastName, email, occupation, city, bio }\n        // eslint-disable-next-line default-case\n        switch(step) {\n            case 1:\n                return (\n                    <FormUserDetails\n                        nextStep={this.nextStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                    />\n                )\n            case 2:\n                return (\n                    <FormPersonalDetails\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                    />\n                )\n            case 3:\n                return (\n                    <Confirm\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        values={values}\n                    />\n                )\n            case 4:\n                    return <Success values={values}/>\n        }\n    }\n}\n\nexport default UserForm\n","import React from 'react';\nimport './App.css';\nimport { UserForm } from './components/UserForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}